diff --git a/packages/core/diagnostic/src/diagnostic.ts b/packages/core/diagnostic/src/diagnostic.ts
index a02bf429e..0f51648d4 100644
--- a/packages/core/diagnostic/src/diagnostic.ts
+++ b/packages/core/diagnostic/src/diagnostic.ts
@@ -196,9 +196,7 @@ export default class ThrowableDiagnostic extends Error {

     // Construct error from diagnostics
     super(diagnostics[0].message);
-    // @ts-ignore
     this.stack = diagnostics[0].stack ?? super.stack;
-    // @ts-ignore
     this.name = diagnostics[0].name ?? super.name;

     this.diagnostics = diagnostics;
diff --git a/packages/core/fs/src/OverlayFS.ts b/packages/core/fs/src/OverlayFS.ts
index b9208fbae..b3dce7a1f 100644
--- a/packages/core/fs/src/OverlayFS.ts
+++ b/packages/core/fs/src/OverlayFS.ts
@@ -339,7 +339,7 @@ export class OverlayFS implements FileSystem {
     let entries = new Map();

     try {
-      for (let entry: any of this.writable.readdirSync(dir, opts)) {
+      for (let entry of this.writable.readdirSync(dir, opts)) {
         let filePath = path.join(dir, entry.name ?? entry);
         if (this.deleted.has(filePath)) continue;
         entries.set(filePath, entry);
@@ -349,7 +349,7 @@ export class OverlayFS implements FileSystem {
     }

     try {
-      for (let entry: any of this.readable.readdirSync(dir, opts)) {
+      for (let entry of this.readable.readdirSync(dir, opts)) {
         let filePath = path.join(dir, entry.name ?? entry);
         if (this.deleted.has(filePath)) continue;
         if (entries.has(filePath)) continue;
diff --git a/packages/core/profiler/src/Tracer.ts b/packages/core/profiler/src/Tracer.ts
index 19ced9ca4..3950ac8c2 100644
--- a/packages/core/profiler/src/Tracer.ts
+++ b/packages/core/profiler/src/Tracer.ts
@@ -3,7 +3,6 @@ import type {
   TraceMeasurement as ITraceMeasurement,
   TraceMeasurementData,
 } from './types';
-// @ts-ignore
 import {ValueEmitter} from '@atlaspack/events';

 import {performance} from 'perf_hooks';
diff --git a/packages/core/test-utils/src/fsFixture.ts b/packages/core/test-utils/src/fsFixture.ts
index a37c82edc..709b6f5ac 100644
--- a/packages/core/test-utils/src/fsFixture.ts
+++ b/packages/core/test-utils/src/fsFixture.ts
@@ -24,14 +24,6 @@ export function fsFixture(fs: FileSystem, cwd: string = fs.cwd()): (
   };
 }

-declare function toFixture: (fs: FileSystem, dir?: string) => Promise<FixtureRoot | FixtureDir>;
-
-// eslint-disable-next-line no-redeclare
-declare function toFixture: (fs: FileSystem, dir: string, includeDir?: boolean) => Promise<FixtureRoot | FixtureDir>;
-
-// eslint-disable-next-line no-redeclare
-declare function toFixture: <T>(fs: FileSystem, dir: string, parent: T) => Promise<T>;
-
 const DISALLOWED_FILETYPES = new Set([
   '.crt',
   '.gitkeep',
@@ -45,7 +37,9 @@ const DISALLOWED_FILETYPES = new Set([

 const MAX_FILE_SIZE = 1000;

-// eslint-disable-next-line no-redeclare
+export function toFixture(fs: FileSystem, dir?: string): Promise<FixtureRoot | FixtureDir>;
+export function toFixture(fs: FileSystem, dir: string, includeDir?: boolean): Promise<FixtureRoot | FixtureDir>;
+export function toFixture<T>(fs: FileSystem, dir: string, parent: T): Promise<T>;
 export async function toFixture(
   fs: FileSystem,
   dir: string = fs.cwd(),
diff --git a/packages/core/types-internal/src/index.ts b/packages/core/types-internal/src/index.ts
index 07da4d948..5dccedec8 100644
--- a/packages/core/types-internal/src/index.ts
+++ b/packages/core/types-internal/src/index.ts
@@ -436,8 +436,7 @@ export type Symbol = string;
 /**
  * A map of export names to the corresponding asset's local variable names.
  */
-export interface // eslint-disable-next-line no-undef
-AssetSymbols extends Iterable<[symbol, {
+export interface AssetSymbols extends Iterable<[symbol, {
   local: symbol;
   loc: SourceLocation | null | undefined;
   meta?: Meta | null | undefined;
@@ -474,8 +473,7 @@ export interface MutableAssetSymbols extends AssetSymbols {
 /**
  * isWeak means: the symbol is not used by the parent asset itself and is merely reexported
  */
-export interface // eslint-disable-next-line no-undef
-MutableDependencySymbols extends Iterable<[symbol, {
+export interface MutableDependencySymbols extends Iterable<[symbol, {
   local: symbol;
   loc: SourceLocation | null | undefined;
   isWeak: boolean;
diff --git a/packages/transformers/less/src/LessTransformer.ts b/packages/transformers/less/src/LessTransformer.ts
index 0e89b33c1..55485bc41 100644
--- a/packages/transformers/less/src/LessTransformer.ts
+++ b/packages/transformers/less/src/LessTransformer.ts
@@ -1,4 +1,3 @@
-import {typeof default as Less} from 'less';
 import path from 'path';
 import {Transformer} from '@atlaspack/plugin';
 import SourceMap from '@parcel/source-map';
