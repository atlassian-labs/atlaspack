e0187e76da0a44c0 4b12bf8476d0c19c async function run() {
    const page1 = await require("6e9566f13a0987c7");
    const page2 = await require("8a86030a1b18e023");
    return await page1() + await page2();
}
output(run());

e0187e76da0a44c0 2ce086abe4f4d9e7 module.exports = require("18f8fb8e726aa291")(require("82de3e329cc5bbf1").getBundleURL('jeR4D') + "page1.HASH_REF_ebc7b4c1dac11865.js").catch((err)=>{
    delete module.bundle.cache[module.id];
    throw err;
}).then(()=>module.bundle.root('e8pkN'));

e0187e76da0a44c0 f3395832e166bd33 const cacheLoader = require("e2bad447376ebbf9");
module.exports = cacheLoader(function loadJSBundle(bundle) {
    return new Promise(function(resolve, reject) {
        // Don't insert the same script twice (e.g. if it was already in the HTML)
        let existingScripts = document.getElementsByTagName('script');
        let isCurrentBundle = function(script) {
            return script.src === bundle;
        };
        if ([].concat(existingScripts).some(isCurrentBundle)) {
            resolve();
            return;
        }
        var preloadLink = document.createElement('link');
        preloadLink.href = bundle;
        preloadLink.rel = 'preload';
        preloadLink.as = 'script';
        document.head.appendChild(preloadLink);
        var script = document.createElement('script');
        script.async = true;
        script.type = 'text/javascript';
        script.src = bundle;
        script.onerror = function(e) {
            var error = new TypeError(`Failed to fetch dynamically imported module: ${bundle}. Error: ${e.message}`);
            script.onerror = script.onload = null;
            script.remove();
            reject(error);
        };
        script.onload = function() {
            script.onerror = script.onload = null;
            resolve();
        };
        document.getElementsByTagName('head')[0].appendChild(script);
    });
});

e0187e76da0a44c0 8ac0e02ef0183d60 let cachedBundles = {};
let cachedPreloads = {};
let cachedPrefetches = {};
function getCache(type) {
    switch(type){
        case 'preload':
            return cachedPreloads;
        case 'prefetch':
            return cachedPrefetches;
        default:
            return cachedBundles;
    }
}
module.exports = function cacheLoader(loader, type) {
    return function(bundle) {
        let cache = getCache(type);
        if (cache[bundle]) return cache[bundle];
        return cache[bundle] = loader.apply(null, arguments).catch(function(e) {
            delete cache[bundle];
            throw e;
        });
    };
};

e0187e76da0a44c0 b2065fffb56392d2 var bundleURL = {};
function getBundleURLCached(id) {
    var value = bundleURL[id];
    if (!value) {
        value = getBundleURL();
        bundleURL[id] = value;
    }
    return value;
}
function getBundleURL() {
    try {
        throw new Error();
    } catch (err) {
        var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^)\n]+/g);
        if (matches) // The first two stack frames will be this function and getBundleURLCached.
        // Use the 3rd one, which will be a runtime in the original bundle.
        return getBaseURL(matches[2]);
    }
    return '/';
}
function getBaseURL(url) {
    return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/.+)\/[^/]+$/, '$1') + '/';
}
// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.
function getOrigin(url) {
    let matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\/\/[^/]+/);
    if (!matches) throw new Error('Origin not found');
    return matches[0];
}
exports.getBundleURL = getBundleURLCached;
exports.getBaseURL = getBaseURL;
exports.getOrigin = getOrigin;

e0187e76da0a44c0 6c740fd5293c1417 module.exports = require("675ba6b3192fa1c3")(require("f64fc27b0762b8d0").getBundleURL('jeR4D') + "page2.HASH_REF_797d8b150732c46c.js").catch((err)=>{
    delete module.bundle.cache[module.id];
    throw err;
}).then(()=>module.bundle.root('dTn1t'));

ebc7b4c1dac11865 a4a576f3c61a98b3 module.exports = async ()=>{
    const get = await require("2d764abb487a2076");
    return get();
};

ebc7b4c1dac11865 21d5d40dacffa01f module.exports = require("750e29877b8e156a")(require("17345b4f304025f3").getBundleURL('kf3dH') + "async.HASH_REF_79b1bfbe8e1c56c9.js").catch((err)=>{
    delete module.bundle.cache[module.id];
    throw err;
}).then(()=>module.bundle.root('2VW8Q'));

79b1bfbe8e1c56c9 222e0160d42b4ebb module.exports = ()=>10;

797d8b150732c46c a1d2453e709bda0c module.exports = async ()=>{
    const get = await require("aead624db472eda0");
    return get();
};

797d8b150732c46c f10733df2ec6e298 module.exports = require("baf2cf9870fb2e57")(require("12c8f7e38464addc").getBundleURL('aqGOx') + "async.HASH_REF_79b1bfbe8e1c56c9.js").catch((err)=>{
    delete module.bundle.cache[module.id];
    throw err;
}).then(()=>module.bundle.root('2VW8Q'));

