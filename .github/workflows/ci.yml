name: Continuous Integration

on:
  merge_group:
  pull_request:
  push:
    branches:
      - main

concurrency:
  # This causes the workflow to be cancelled if a newer commit is pushed to the
  # pull request while it's still being built. Builds on main are not cancelled.
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # Build and store native packages
  build_native:
    strategy:
      fail-fast: false
      matrix:
        include:
          # MacOS ARM64
          - name: üçé Build MacOS ARM64
            os: macos-15
            target: aarch64-apple-darwin

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      # Job Setup
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: ./.github/actions/rust-toolchain
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: '${{ matrix.target }}'
          # Only store new caches on main
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Run sccache stat for check
        shell: bash
        run: ${SCCACHE_PATH} --show-stats

      - uses: ./.github/actions/setup-node
      # Build native artifacts
      - env:
          RUSTUP_TARGET: ${{ matrix.target }}
          CARGO_PROFILE: release
          SCCACHE_GHA_ENABLED: 'true'
          RUSTC_WRAPPER: 'sccache'
        run: yarn build-native

      - if: ${{ matrix.build_js }}
        run: yarn build
      # Upload artifacts for use later in pipeline
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.target }}
          path: packages/**/*
          retention-days: 1

  integration_tests:
    name: Integration tests (${{ matrix.os }}, Node ${{ matrix.node }})
    needs:
      - build_native
    timeout-minutes: 45
    strategy:
      # These tend to be quite flakey, so one failed instance shouldn't stop
      # others from potentially succeeding
      fail-fast: false
      matrix:
        include:          # MacOS ARM64
          - os: macos-15
            node: 20
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-watchman
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/download-artifact@v4
        with:
          pattern: packages-*
          path: packages
          merge-multiple: true
      - name: Bump max inotify watches (Linux only)
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p;
        if: ${{ runner.os == 'Linux' }}
      - run: yarn test:integration-ci
        env:
          RUST_BACKTRACE: full

  integration_tests_v3:
    name: Integration tests (v3 ${{ matrix.os }}, Node ${{ matrix.node }})
    needs:
      - build_native
    timeout-minutes: 15
    strategy:
      # These tend to be quite flakey, so one failed instance shouldn't stop
      # others from potentially succeeding
      fail-fast: false
      matrix:
        include:
          # Linux AMD64
          - os: ubuntu-22.04
            node: 20
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/download-artifact@v4
        with:
          pattern: packages-*
          path: packages
          merge-multiple: true
      - name: Bump max inotify watches (Linux only)
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p;
        if: ${{ runner.os == 'Linux' }}
      - run: yarn test:integration-ci
        env:
          ATLASPACK_V3: true
          RUST_BACKTRACE: full
