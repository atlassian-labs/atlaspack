name: Continuous Integration

on:
  merge_group:
  pull_request:
  push:
    branches:
      - main

concurrency:
  # This causes the workflow to be cancelled if a newer commit is pushed to the
  # pull request while it's still being built. Builds on main are not cancelled.
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         cache: yarn
  #     - uses: ./.github/actions/rust-toolchain
  #       with:
  #         components: clippy, rustfmt
  #     - run: yarn --frozen-lockfile
  #     - run: yarn lint

  # flow:
  #   name: Flow
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         cache: yarn
  #     - run: yarn --frozen-lockfile
  #     - run: yarn flow check

  # ts-types:
  #   name: TypeScript types
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         cache: yarn
  #     - run: yarn --frozen-lockfile
  #     - run: yarn build-ts

  build_native:
    strategy:
      matrix:
        config:
          - name: 🐥 Build Linux AMD64
            runner: ubuntu-24.04

          # - name: 🐥 Build Linux ARM64
          #   runner: ubuntu-24.04-arm

          # - name: 🍎 Build MacOS AMD64
          #   runner: macos-13

          # - name: 🍎 Build MacOS ARM64
          #   runner: macos-15

          # Disabled
          # - name: 🟦 Windows AMD64
          #   runner: windows-latest
    name: ${{ matrix.config.name}}
    runs-on: ${{ matrix.config.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        id: yarn-cache-dir-path
      - uses: ./.github/actions/rust-toolchain
      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/target
          restore-keys: |
            /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/target
            /${{ runner.os }}/${{ runner.arch }}/main/target
      - name: Cache Yarn
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/yarn
          restore-keys: |
            /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/yarn
            /${{ runner.os }}/${{ runner.arch }}/main/yarn
      - run: yarn --frozen-lockfile
      - run: yarn build-native-release

  # unit_tests:
  #   name: Unit tests (${{ matrix.os }}, Node ${{ matrix.node }})
  #   needs: [build_native]
  #   strategy:
  #     matrix:
  #       node: [18, 20]
  #       os: [ubuntu-latest, macos-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         cache: yarn
  #         node-version: ${{ matrix.node }}
  #     - uses: ./.github/actions/rust-toolchain
  #     - name: Cache Rust
  #       uses: actions/cache@v4
  #       with:
  #         path: target
  #         key: /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/target
  #         restore-keys: |
  #           /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/target
  #           /${{ runner.os }}/${{ runner.arch }}/main/target
  #     - name: Bump max inotify watches (Linux only)
  #       if: ${{ runner.os == 'Linux' }}
  #       run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p;
  #     - run: yarn --frozen-lockfile
  #     - run: yarn build-native-release
  #     - run: yarn test:unit

  integration_tests:
    name: Integration tests (${{ matrix.version == 'v3' && 'v3, ' || '' }}${{ matrix.os }}, Node ${{ matrix.node }})
    needs: [build_native]
    timeout-minutes: 35
    strategy:
      matrix:
        node: [18, 20]
        os: [ubuntu-24.04]
        # os: [ubuntu-24.04, ubuntu-24.04-arm, macos-15, macos-13]
        # version: [v2, v3]
        version: [v3]
      # These tend to be quite flakey, so one failed instance shouldn't stop
      # others from potentially succeeding
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: ${{ matrix.node }}
      - uses: ./.github/actions/rust-toolchain
      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: target
          key: /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/target
          restore-keys: |
            /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/target
            /${{ runner.os }}/${{ runner.arch }}/main/target
      - name: Bump max inotify watches (Linux only)
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p;
        if: ${{ runner.os == 'Linux' }}
      - run: yarn --frozen-lockfile
      - run: yarn build-native-release
      - run: yarn build
      - run: yarn test:integration-ci
        env:
          ATLASPACK_V3: ${{ matrix.version == 'v3' && 'true' || 'false' }}

  # end_to_end_tests:
  #   name: E2E tests
  #   timeout-minutes: 35
  #   strategy:
  #     matrix:
  #       node: [20]
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         cache: yarn
  #         node-version: ${{ matrix.node }}
  #     - uses: ./.github/actions/rust-toolchain
  #     - uses: Swatinem/rust-cache@v2
  #       with:
  #         shared-key: ${{ matrix.os }}
  #     - name: Cache Rust
  #       uses: actions/cache@v4
  #       with:
  #         path: target
  #         key: /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/target
  #         restore-keys: |
  #           /${{ runner.os }}/${{ runner.arch }}/${{ github.ref }}/target
  #           /${{ runner.os }}/${{ runner.arch }}/main/target
  #     - name: Bump max inotify watches (Linux only)
  #       run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p;
  #       if: ${{ runner.os == 'Linux' }}
  #     - run: yarn --frozen-lockfile
  #     - run: yarn build-native-release
  #     - run: yarn build
  #     - run: yarn playwright install
  #     - run: yarn test:e2e:ci

  # repl:
  #   name: Deploy REPL
  #   if: false # ${{ github.event_name == 'pull_request' }}
  #   uses: ./.github/workflows/repl.yml
  #   permissions:
  #     contents: read
  #     deployments: write
  #   secrets: inherit
  #   with:
  #     alias-domains: |
  #       pr-{{PR_NUMBER}}.repl.atlaspack.org
  #     environment: Preview
