// source: packages/core/core/src/protobuf/schema.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

goog.exportSymbol('proto.ASTGenerator', null, global);
goog.exportSymbol('proto.AssetRequestInput', null, global);
goog.exportSymbol('proto.AssetRequestNode', null, global);
goog.exportSymbol('proto.BundleBehavior', null, global);
goog.exportSymbol('proto.Dependency', null, global);
goog.exportSymbol('proto.DependencyPriority', null, global);
goog.exportSymbol('proto.DependencySymbol', null, global);
goog.exportSymbol('proto.Environment', null, global);
goog.exportSymbol('proto.EnvironmentContext', null, global);
goog.exportSymbol('proto.EnvironmentFeature', null, global);
goog.exportSymbol('proto.LineColumn', null, global);
goog.exportSymbol('proto.OutputFormat', null, global);
goog.exportSymbol('proto.SourceLocation', null, global);
goog.exportSymbol('proto.SourceType', null, global);
goog.exportSymbol('proto.SpecifierType', null, global);
goog.exportSymbol('proto.Target', null, global);
goog.exportSymbol('proto.TargetSourceMapOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ASTGenerator = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ASTGenerator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ASTGenerator.displayName = 'proto.ASTGenerator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LineColumn = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.LineColumn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LineColumn.displayName = 'proto.LineColumn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SourceLocation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SourceLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SourceLocation.displayName = 'proto.SourceLocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DependencySymbol = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DependencySymbol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DependencySymbol.displayName = 'proto.DependencySymbol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TargetSourceMapOptions = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TargetSourceMapOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.TargetSourceMapOptions.displayName = 'proto.TargetSourceMapOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Environment = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Environment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Environment.displayName = 'proto.Environment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Target = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Target, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Target.displayName = 'proto.Target';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Dependency = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.Dependency.repeatedFields_,
    null,
  );
};
goog.inherits(proto.Dependency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Dependency.displayName = 'proto.Dependency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AssetRequestInput = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AssetRequestInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AssetRequestInput.displayName = 'proto.AssetRequestInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AssetRequestNode = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AssetRequestNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AssetRequestNode.displayName = 'proto.AssetRequestNode';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.ASTGenerator.prototype.toObject = function (opt_includeInstance) {
    return proto.ASTGenerator.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.ASTGenerator} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.ASTGenerator.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ''),
        version: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ASTGenerator}
 */
proto.ASTGenerator.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ASTGenerator();
  return proto.ASTGenerator.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ASTGenerator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ASTGenerator}
 */
proto.ASTGenerator.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setVersion(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ASTGenerator.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.ASTGenerator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ASTGenerator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ASTGenerator.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.ASTGenerator.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.ASTGenerator} returns this
 */
proto.ASTGenerator.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string version = 2;
 * @return {string}
 */
proto.ASTGenerator.prototype.getVersion = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.ASTGenerator} returns this
 */
proto.ASTGenerator.prototype.setVersion = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.LineColumn.prototype.toObject = function (opt_includeInstance) {
    return proto.LineColumn.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.LineColumn} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.LineColumn.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        line: jspb.Message.getFieldWithDefault(msg, 1, 0),
        column: jspb.Message.getFieldWithDefault(msg, 2, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LineColumn}
 */
proto.LineColumn.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LineColumn();
  return proto.LineColumn.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LineColumn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LineColumn}
 */
proto.LineColumn.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setLine(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setColumn(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LineColumn.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.LineColumn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LineColumn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LineColumn.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getLine();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getColumn();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
};

/**
 * optional int32 line = 1;
 * @return {number}
 */
proto.LineColumn.prototype.getLine = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.LineColumn} returns this
 */
proto.LineColumn.prototype.setLine = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 column = 2;
 * @return {number}
 */
proto.LineColumn.prototype.getColumn = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.LineColumn} returns this
 */
proto.LineColumn.prototype.setColumn = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.SourceLocation.prototype.toObject = function (opt_includeInstance) {
    return proto.SourceLocation.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.SourceLocation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.SourceLocation.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        filepath: jspb.Message.getFieldWithDefault(msg, 1, ''),
        start:
          (f = msg.getStart()) && proto.LineColumn.toObject(includeInstance, f),
        end:
          (f = msg.getEnd()) && proto.LineColumn.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SourceLocation}
 */
proto.SourceLocation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SourceLocation();
  return proto.SourceLocation.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SourceLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SourceLocation}
 */
proto.SourceLocation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setFilepath(value);
        break;
      case 2:
        var value = new proto.LineColumn();
        reader.readMessage(value, proto.LineColumn.deserializeBinaryFromReader);
        msg.setStart(value);
        break;
      case 3:
        var value = new proto.LineColumn();
        reader.readMessage(value, proto.LineColumn.deserializeBinaryFromReader);
        msg.setEnd(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SourceLocation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.SourceLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SourceLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SourceLocation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(2, f, proto.LineColumn.serializeBinaryToWriter);
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(3, f, proto.LineColumn.serializeBinaryToWriter);
  }
};

/**
 * optional string filePath = 1;
 * @return {string}
 */
proto.SourceLocation.prototype.getFilepath = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.SourceLocation} returns this
 */
proto.SourceLocation.prototype.setFilepath = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional LineColumn start = 2;
 * @return {?proto.LineColumn}
 */
proto.SourceLocation.prototype.getStart = function () {
  return /** @type{?proto.LineColumn} */ (
    jspb.Message.getWrapperField(this, proto.LineColumn, 2)
  );
};

/**
 * @param {?proto.LineColumn|undefined} value
 * @return {!proto.SourceLocation} returns this
 */
proto.SourceLocation.prototype.setStart = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.SourceLocation} returns this
 */
proto.SourceLocation.prototype.clearStart = function () {
  return this.setStart(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SourceLocation.prototype.hasStart = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional LineColumn end = 3;
 * @return {?proto.LineColumn}
 */
proto.SourceLocation.prototype.getEnd = function () {
  return /** @type{?proto.LineColumn} */ (
    jspb.Message.getWrapperField(this, proto.LineColumn, 3)
  );
};

/**
 * @param {?proto.LineColumn|undefined} value
 * @return {!proto.SourceLocation} returns this
 */
proto.SourceLocation.prototype.setEnd = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.SourceLocation} returns this
 */
proto.SourceLocation.prototype.clearEnd = function () {
  return this.setEnd(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SourceLocation.prototype.hasEnd = function () {
  return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.DependencySymbol.prototype.toObject = function (opt_includeInstance) {
    return proto.DependencySymbol.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.DependencySymbol} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.DependencySymbol.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        local: jspb.Message.getFieldWithDefault(msg, 1, ''),
        loc:
          (f = msg.getLoc()) &&
          proto.SourceLocation.toObject(includeInstance, f),
        isweak: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        meta: jspb.Message.getFieldWithDefault(msg, 4, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DependencySymbol}
 */
proto.DependencySymbol.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DependencySymbol();
  return proto.DependencySymbol.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DependencySymbol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DependencySymbol}
 */
proto.DependencySymbol.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setLocal(value);
        break;
      case 2:
        var value = new proto.SourceLocation();
        reader.readMessage(
          value,
          proto.SourceLocation.deserializeBinaryFromReader,
        );
        msg.setLoc(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsweak(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setMeta(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DependencySymbol.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.DependencySymbol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DependencySymbol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DependencySymbol.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getLocal();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getLoc();
  if (f != null) {
    writer.writeMessage(2, f, proto.SourceLocation.serializeBinaryToWriter);
  }
  f = message.getIsweak();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getMeta();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
};

/**
 * optional string local = 1;
 * @return {string}
 */
proto.DependencySymbol.prototype.getLocal = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.DependencySymbol} returns this
 */
proto.DependencySymbol.prototype.setLocal = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional SourceLocation loc = 2;
 * @return {?proto.SourceLocation}
 */
proto.DependencySymbol.prototype.getLoc = function () {
  return /** @type{?proto.SourceLocation} */ (
    jspb.Message.getWrapperField(this, proto.SourceLocation, 2)
  );
};

/**
 * @param {?proto.SourceLocation|undefined} value
 * @return {!proto.DependencySymbol} returns this
 */
proto.DependencySymbol.prototype.setLoc = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.DependencySymbol} returns this
 */
proto.DependencySymbol.prototype.clearLoc = function () {
  return this.setLoc(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DependencySymbol.prototype.hasLoc = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional bool isWeak = 3;
 * @return {boolean}
 */
proto.DependencySymbol.prototype.getIsweak = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.DependencySymbol} returns this
 */
proto.DependencySymbol.prototype.setIsweak = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

/**
 * optional string meta = 4;
 * @return {string}
 */
proto.DependencySymbol.prototype.getMeta = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.DependencySymbol} returns this
 */
proto.DependencySymbol.prototype.setMeta = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.TargetSourceMapOptions.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.TargetSourceMapOptions.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.TargetSourceMapOptions} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.TargetSourceMapOptions.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        sourceroot: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
        inline: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
        inlinesources: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TargetSourceMapOptions}
 */
proto.TargetSourceMapOptions.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TargetSourceMapOptions();
  return proto.TargetSourceMapOptions.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TargetSourceMapOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TargetSourceMapOptions}
 */
proto.TargetSourceMapOptions.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setSourceroot(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setInline(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setInlinesources(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TargetSourceMapOptions.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.TargetSourceMapOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TargetSourceMapOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TargetSourceMapOptions.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(1, f);
  }
  f = message.getInline();
  if (f) {
    writer.writeBool(2, f);
  }
  f = message.getInlinesources();
  if (f) {
    writer.writeBool(3, f);
  }
};

/**
 * optional string sourceRoot = 1;
 * @return {string}
 */
proto.TargetSourceMapOptions.prototype.getSourceroot = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.TargetSourceMapOptions} returns this
 */
proto.TargetSourceMapOptions.prototype.setSourceroot = function (value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.TargetSourceMapOptions} returns this
 */
proto.TargetSourceMapOptions.prototype.clearSourceroot = function () {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.TargetSourceMapOptions.prototype.hasSourceroot = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional bool inline = 2;
 * @return {boolean}
 */
proto.TargetSourceMapOptions.prototype.getInline = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 2, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.TargetSourceMapOptions} returns this
 */
proto.TargetSourceMapOptions.prototype.setInline = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};

/**
 * optional bool inlineSources = 3;
 * @return {boolean}
 */
proto.TargetSourceMapOptions.prototype.getInlinesources = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.TargetSourceMapOptions} returns this
 */
proto.TargetSourceMapOptions.prototype.setInlinesources = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Environment.prototype.toObject = function (opt_includeInstance) {
    return proto.Environment.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Environment} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Environment.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        context: jspb.Message.getFieldWithDefault(msg, 2, 0),
        engines: jspb.Message.getFieldWithDefault(msg, 3, ''),
        includenodemodules: jspb.Message.getFieldWithDefault(msg, 4, ''),
        outputformat: jspb.Message.getFieldWithDefault(msg, 5, 0),
        sourcetype: jspb.Message.getFieldWithDefault(msg, 6, 0),
        islibrary: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
        shouldoptimize: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
        shouldscopehoist: jspb.Message.getBooleanFieldWithDefault(
          msg,
          9,
          false,
        ),
        sourcemap:
          (f = msg.getSourcemap()) &&
          proto.TargetSourceMapOptions.toObject(includeInstance, f),
        loc:
          (f = msg.getLoc()) &&
          proto.SourceLocation.toObject(includeInstance, f),
        unstablesinglefileoutput: jspb.Message.getBooleanFieldWithDefault(
          msg,
          12,
          false,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Environment}
 */
proto.Environment.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Environment();
  return proto.Environment.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Environment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Environment}
 */
proto.Environment.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {!proto.EnvironmentContext} */ (
          reader.readEnum()
        );
        msg.setContext(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setEngines(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setIncludenodemodules(value);
        break;
      case 5:
        var value = /** @type {!proto.OutputFormat} */ (reader.readEnum());
        msg.setOutputformat(value);
        break;
      case 6:
        var value = /** @type {!proto.SourceType} */ (reader.readEnum());
        msg.setSourcetype(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIslibrary(value);
        break;
      case 8:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setShouldoptimize(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setShouldscopehoist(value);
        break;
      case 10:
        var value = new proto.TargetSourceMapOptions();
        reader.readMessage(
          value,
          proto.TargetSourceMapOptions.deserializeBinaryFromReader,
        );
        msg.setSourcemap(value);
        break;
      case 11:
        var value = new proto.SourceLocation();
        reader.readMessage(
          value,
          proto.SourceLocation.deserializeBinaryFromReader,
        );
        msg.setLoc(value);
        break;
      case 12:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setUnstablesinglefileoutput(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Environment.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Environment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Environment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Environment.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getContext();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
  f = message.getEngines();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getIncludenodemodules();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getOutputformat();
  if (f !== 0.0) {
    writer.writeEnum(5, f);
  }
  f = message.getSourcetype();
  if (f !== 0.0) {
    writer.writeEnum(6, f);
  }
  f = message.getIslibrary();
  if (f) {
    writer.writeBool(7, f);
  }
  f = message.getShouldoptimize();
  if (f) {
    writer.writeBool(8, f);
  }
  f = message.getShouldscopehoist();
  if (f) {
    writer.writeBool(9, f);
  }
  f = message.getSourcemap();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.TargetSourceMapOptions.serializeBinaryToWriter,
    );
  }
  f = message.getLoc();
  if (f != null) {
    writer.writeMessage(11, f, proto.SourceLocation.serializeBinaryToWriter);
  }
  f = message.getUnstablesinglefileoutput();
  if (f) {
    writer.writeBool(12, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.Environment.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional EnvironmentContext context = 2;
 * @return {!proto.EnvironmentContext}
 */
proto.Environment.prototype.getContext = function () {
  return /** @type {!proto.EnvironmentContext} */ (
    jspb.Message.getFieldWithDefault(this, 2, 0)
  );
};

/**
 * @param {!proto.EnvironmentContext} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setContext = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * optional string engines = 3;
 * @return {string}
 */
proto.Environment.prototype.getEngines = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setEngines = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string includeNodeModules = 4;
 * @return {string}
 */
proto.Environment.prototype.getIncludenodemodules = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setIncludenodemodules = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional OutputFormat outputFormat = 5;
 * @return {!proto.OutputFormat}
 */
proto.Environment.prototype.getOutputformat = function () {
  return /** @type {!proto.OutputFormat} */ (
    jspb.Message.getFieldWithDefault(this, 5, 0)
  );
};

/**
 * @param {!proto.OutputFormat} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setOutputformat = function (value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};

/**
 * optional SourceType sourceType = 6;
 * @return {!proto.SourceType}
 */
proto.Environment.prototype.getSourcetype = function () {
  return /** @type {!proto.SourceType} */ (
    jspb.Message.getFieldWithDefault(this, 6, 0)
  );
};

/**
 * @param {!proto.SourceType} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setSourcetype = function (value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};

/**
 * optional bool isLibrary = 7;
 * @return {boolean}
 */
proto.Environment.prototype.getIslibrary = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 7, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setIslibrary = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};

/**
 * optional bool shouldOptimize = 8;
 * @return {boolean}
 */
proto.Environment.prototype.getShouldoptimize = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 8, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setShouldoptimize = function (value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};

/**
 * optional bool shouldScopeHoist = 9;
 * @return {boolean}
 */
proto.Environment.prototype.getShouldscopehoist = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 9, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setShouldscopehoist = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};

/**
 * optional TargetSourceMapOptions sourceMap = 10;
 * @return {?proto.TargetSourceMapOptions}
 */
proto.Environment.prototype.getSourcemap = function () {
  return /** @type{?proto.TargetSourceMapOptions} */ (
    jspb.Message.getWrapperField(this, proto.TargetSourceMapOptions, 10)
  );
};

/**
 * @param {?proto.TargetSourceMapOptions|undefined} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setSourcemap = function (value) {
  return jspb.Message.setWrapperField(this, 10, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.clearSourcemap = function () {
  return this.setSourcemap(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Environment.prototype.hasSourcemap = function () {
  return jspb.Message.getField(this, 10) != null;
};

/**
 * optional SourceLocation loc = 11;
 * @return {?proto.SourceLocation}
 */
proto.Environment.prototype.getLoc = function () {
  return /** @type{?proto.SourceLocation} */ (
    jspb.Message.getWrapperField(this, proto.SourceLocation, 11)
  );
};

/**
 * @param {?proto.SourceLocation|undefined} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setLoc = function (value) {
  return jspb.Message.setWrapperField(this, 11, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.clearLoc = function () {
  return this.setLoc(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Environment.prototype.hasLoc = function () {
  return jspb.Message.getField(this, 11) != null;
};

/**
 * optional bool unstableSingleFileOutput = 12;
 * @return {boolean}
 */
proto.Environment.prototype.getUnstablesinglefileoutput = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 12, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.Environment} returns this
 */
proto.Environment.prototype.setUnstablesinglefileoutput = function (value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Target.prototype.toObject = function (opt_includeInstance) {
    return proto.Target.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Target} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Target.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        distentry: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
        distdir: jspb.Message.getFieldWithDefault(msg, 2, ''),
        env:
          (f = msg.getEnv()) && proto.Environment.toObject(includeInstance, f),
        name: jspb.Message.getFieldWithDefault(msg, 4, ''),
        publicurl: jspb.Message.getFieldWithDefault(msg, 5, ''),
        loc:
          (f = msg.getLoc()) &&
          proto.SourceLocation.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Target}
 */
proto.Target.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Target();
  return proto.Target.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Target} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Target}
 */
proto.Target.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setDistentry(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setDistdir(value);
        break;
      case 3:
        var value = new proto.Environment();
        reader.readMessage(
          value,
          proto.Environment.deserializeBinaryFromReader,
        );
        msg.setEnv(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setPublicurl(value);
        break;
      case 6:
        var value = new proto.SourceLocation();
        reader.readMessage(
          value,
          proto.SourceLocation.deserializeBinaryFromReader,
        );
        msg.setLoc(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Target.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Target.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Target} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Target.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(1, f);
  }
  f = message.getDistdir();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getEnv();
  if (f != null) {
    writer.writeMessage(3, f, proto.Environment.serializeBinaryToWriter);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getPublicurl();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getLoc();
  if (f != null) {
    writer.writeMessage(6, f, proto.SourceLocation.serializeBinaryToWriter);
  }
};

/**
 * optional string distEntry = 1;
 * @return {string}
 */
proto.Target.prototype.getDistentry = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.setDistentry = function (value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.clearDistentry = function () {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Target.prototype.hasDistentry = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string distDir = 2;
 * @return {string}
 */
proto.Target.prototype.getDistdir = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.setDistdir = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional Environment env = 3;
 * @return {?proto.Environment}
 */
proto.Target.prototype.getEnv = function () {
  return /** @type{?proto.Environment} */ (
    jspb.Message.getWrapperField(this, proto.Environment, 3)
  );
};

/**
 * @param {?proto.Environment|undefined} value
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.setEnv = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.clearEnv = function () {
  return this.setEnv(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Target.prototype.hasEnv = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional string name = 4;
 * @return {string}
 */
proto.Target.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string publicUrl = 5;
 * @return {string}
 */
proto.Target.prototype.getPublicurl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.setPublicurl = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional SourceLocation loc = 6;
 * @return {?proto.SourceLocation}
 */
proto.Target.prototype.getLoc = function () {
  return /** @type{?proto.SourceLocation} */ (
    jspb.Message.getWrapperField(this, proto.SourceLocation, 6)
  );
};

/**
 * @param {?proto.SourceLocation|undefined} value
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.setLoc = function (value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.Target} returns this
 */
proto.Target.prototype.clearLoc = function () {
  return this.setLoc(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Target.prototype.hasLoc = function () {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Dependency.repeatedFields_ = [11];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Dependency.prototype.toObject = function (opt_includeInstance) {
    return proto.Dependency.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Dependency} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Dependency.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        specifier: jspb.Message.getFieldWithDefault(msg, 2, ''),
        specifiertype: jspb.Message.getFieldWithDefault(msg, 3, 0),
        priority: jspb.Message.getFieldWithDefault(msg, 4, 0),
        bundlebehavior: jspb.Message.getFieldWithDefault(msg, 5, 0),
        needsstablename: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
        isoptional: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
        isentry: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
        loc:
          (f = msg.getLoc()) &&
          proto.SourceLocation.toObject(includeInstance, f),
        environmentid: jspb.Message.getFieldWithDefault(msg, 10, ''),
        packageconditionsList:
          (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
        meta: jspb.Message.getFieldWithDefault(msg, 12, ''),
        target:
          (f = msg.getTarget()) && proto.Target.toObject(includeInstance, f),
        sourceassetid: jspb.Message.getFieldWithDefault(msg, 14, ''),
        sourcepath: jspb.Message.getFieldWithDefault(msg, 15, ''),
        sourceassettype: jspb.Message.getFieldWithDefault(msg, 16, ''),
        resolvefrom: jspb.Message.getFieldWithDefault(msg, 17, ''),
        range: jspb.Message.getFieldWithDefault(msg, 18, ''),
        pipeline: jspb.Message.getFieldWithDefault(msg, 19, ''),
        symbolsMap: (f = msg.getSymbolsMap())
          ? f.toObject(includeInstance, proto.DependencySymbol.toObject)
          : [],
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Dependency}
 */
proto.Dependency.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Dependency();
  return proto.Dependency.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Dependency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Dependency}
 */
proto.Dependency.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSpecifier(value);
        break;
      case 3:
        var value = /** @type {!proto.SpecifierType} */ (reader.readEnum());
        msg.setSpecifiertype(value);
        break;
      case 4:
        var value = /** @type {!proto.DependencyPriority} */ (
          reader.readEnum()
        );
        msg.setPriority(value);
        break;
      case 5:
        var value = /** @type {!proto.BundleBehavior} */ (reader.readEnum());
        msg.setBundlebehavior(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setNeedsstablename(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsoptional(value);
        break;
      case 8:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsentry(value);
        break;
      case 9:
        var value = new proto.SourceLocation();
        reader.readMessage(
          value,
          proto.SourceLocation.deserializeBinaryFromReader,
        );
        msg.setLoc(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setEnvironmentid(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.addPackageconditions(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setMeta(value);
        break;
      case 13:
        var value = new proto.Target();
        reader.readMessage(value, proto.Target.deserializeBinaryFromReader);
        msg.setTarget(value);
        break;
      case 14:
        var value = /** @type {string} */ (reader.readString());
        msg.setSourceassetid(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setSourcepath(value);
        break;
      case 16:
        var value = /** @type {string} */ (reader.readString());
        msg.setSourceassettype(value);
        break;
      case 17:
        var value = /** @type {string} */ (reader.readString());
        msg.setResolvefrom(value);
        break;
      case 18:
        var value = /** @type {string} */ (reader.readString());
        msg.setRange(value);
        break;
      case 19:
        var value = /** @type {string} */ (reader.readString());
        msg.setPipeline(value);
        break;
      case 20:
        var value = msg.getSymbolsMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readMessage,
            proto.DependencySymbol.deserializeBinaryFromReader,
            '',
            new proto.DependencySymbol(),
          );
        });
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Dependency.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Dependency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Dependency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Dependency.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSpecifier();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getSpecifiertype();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
  f = message.getPriority();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
  f = message.getBundlebehavior();
  if (f !== 0.0) {
    writer.writeEnum(5, f);
  }
  f = message.getNeedsstablename();
  if (f) {
    writer.writeBool(6, f);
  }
  f = message.getIsoptional();
  if (f) {
    writer.writeBool(7, f);
  }
  f = message.getIsentry();
  if (f) {
    writer.writeBool(8, f);
  }
  f = message.getLoc();
  if (f != null) {
    writer.writeMessage(9, f, proto.SourceLocation.serializeBinaryToWriter);
  }
  f = message.getEnvironmentid();
  if (f.length > 0) {
    writer.writeString(10, f);
  }
  f = message.getPackageconditionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(11, f);
  }
  f = message.getMeta();
  if (f.length > 0) {
    writer.writeString(12, f);
  }
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(13, f, proto.Target.serializeBinaryToWriter);
  }
  f = message.getSourceassetid();
  if (f.length > 0) {
    writer.writeString(14, f);
  }
  f = message.getSourcepath();
  if (f.length > 0) {
    writer.writeString(15, f);
  }
  f = message.getSourceassettype();
  if (f.length > 0) {
    writer.writeString(16, f);
  }
  f = message.getResolvefrom();
  if (f.length > 0) {
    writer.writeString(17, f);
  }
  f = message.getRange();
  if (f.length > 0) {
    writer.writeString(18, f);
  }
  f = message.getPipeline();
  if (f.length > 0) {
    writer.writeString(19, f);
  }
  f = message.getSymbolsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      20,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.DependencySymbol.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.Dependency.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string specifier = 2;
 * @return {string}
 */
proto.Dependency.prototype.getSpecifier = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setSpecifier = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional SpecifierType specifierType = 3;
 * @return {!proto.SpecifierType}
 */
proto.Dependency.prototype.getSpecifiertype = function () {
  return /** @type {!proto.SpecifierType} */ (
    jspb.Message.getFieldWithDefault(this, 3, 0)
  );
};

/**
 * @param {!proto.SpecifierType} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setSpecifiertype = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * optional DependencyPriority priority = 4;
 * @return {!proto.DependencyPriority}
 */
proto.Dependency.prototype.getPriority = function () {
  return /** @type {!proto.DependencyPriority} */ (
    jspb.Message.getFieldWithDefault(this, 4, 0)
  );
};

/**
 * @param {!proto.DependencyPriority} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setPriority = function (value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};

/**
 * optional BundleBehavior bundleBehavior = 5;
 * @return {!proto.BundleBehavior}
 */
proto.Dependency.prototype.getBundlebehavior = function () {
  return /** @type {!proto.BundleBehavior} */ (
    jspb.Message.getFieldWithDefault(this, 5, 0)
  );
};

/**
 * @param {!proto.BundleBehavior} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setBundlebehavior = function (value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};

/**
 * optional bool needsStableName = 6;
 * @return {boolean}
 */
proto.Dependency.prototype.getNeedsstablename = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 6, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setNeedsstablename = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};

/**
 * optional bool isOptional = 7;
 * @return {boolean}
 */
proto.Dependency.prototype.getIsoptional = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 7, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setIsoptional = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};

/**
 * optional bool isEntry = 8;
 * @return {boolean}
 */
proto.Dependency.prototype.getIsentry = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 8, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setIsentry = function (value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};

/**
 * optional SourceLocation loc = 9;
 * @return {?proto.SourceLocation}
 */
proto.Dependency.prototype.getLoc = function () {
  return /** @type{?proto.SourceLocation} */ (
    jspb.Message.getWrapperField(this, proto.SourceLocation, 9)
  );
};

/**
 * @param {?proto.SourceLocation|undefined} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setLoc = function (value) {
  return jspb.Message.setWrapperField(this, 9, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.clearLoc = function () {
  return this.setLoc(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Dependency.prototype.hasLoc = function () {
  return jspb.Message.getField(this, 9) != null;
};

/**
 * optional string environmentId = 10;
 * @return {string}
 */
proto.Dependency.prototype.getEnvironmentid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setEnvironmentid = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * repeated string packageConditions = 11;
 * @return {!Array<string>}
 */
proto.Dependency.prototype.getPackageconditionsList = function () {
  return /** @type {!Array<string>} */ (
    jspb.Message.getRepeatedField(this, 11)
  );
};

/**
 * @param {!Array<string>} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setPackageconditionsList = function (value) {
  return jspb.Message.setField(this, 11, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.addPackageconditions = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.clearPackageconditionsList = function () {
  return this.setPackageconditionsList([]);
};

/**
 * optional string meta = 12;
 * @return {string}
 */
proto.Dependency.prototype.getMeta = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setMeta = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * optional Target target = 13;
 * @return {?proto.Target}
 */
proto.Dependency.prototype.getTarget = function () {
  return /** @type{?proto.Target} */ (
    jspb.Message.getWrapperField(this, proto.Target, 13)
  );
};

/**
 * @param {?proto.Target|undefined} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setTarget = function (value) {
  return jspb.Message.setWrapperField(this, 13, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.clearTarget = function () {
  return this.setTarget(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Dependency.prototype.hasTarget = function () {
  return jspb.Message.getField(this, 13) != null;
};

/**
 * optional string sourceAssetId = 14;
 * @return {string}
 */
proto.Dependency.prototype.getSourceassetid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setSourceassetid = function (value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};

/**
 * optional string sourcePath = 15;
 * @return {string}
 */
proto.Dependency.prototype.getSourcepath = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setSourcepath = function (value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};

/**
 * optional string sourceAssetType = 16;
 * @return {string}
 */
proto.Dependency.prototype.getSourceassettype = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setSourceassettype = function (value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};

/**
 * optional string resolveFrom = 17;
 * @return {string}
 */
proto.Dependency.prototype.getResolvefrom = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setResolvefrom = function (value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};

/**
 * optional string range = 18;
 * @return {string}
 */
proto.Dependency.prototype.getRange = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setRange = function (value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};

/**
 * optional string pipeline = 19;
 * @return {string}
 */
proto.Dependency.prototype.getPipeline = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ''));
};

/**
 * @param {string} value
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.setPipeline = function (value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};

/**
 * map<string, DependencySymbol> symbols = 20;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.DependencySymbol>}
 */
proto.Dependency.prototype.getSymbolsMap = function (opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.DependencySymbol>} */ (
    jspb.Message.getMapField(this, 20, opt_noLazyCreate, proto.DependencySymbol)
  );
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.Dependency} returns this
 */
proto.Dependency.prototype.clearSymbolsMap = function () {
  this.getSymbolsMap().clear();
  return this;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.AssetRequestInput.prototype.toObject = function (opt_includeInstance) {
    return proto.AssetRequestInput.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.AssetRequestInput} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.AssetRequestInput.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ''),
        filepath: jspb.Message.getFieldWithDefault(msg, 2, ''),
        env: jspb.Message.getFieldWithDefault(msg, 3, ''),
        issource: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        candefer: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        sideeffects: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
        code: jspb.Message.getFieldWithDefault(msg, 7, ''),
        pipeline: jspb.Message.getFieldWithDefault(msg, 8, ''),
        isurl: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
        query: jspb.Message.getFieldWithDefault(msg, 11, ''),
        issinglechangerebuild: jspb.Message.getBooleanFieldWithDefault(
          msg,
          12,
          false,
        ),
        optionsid: jspb.Message.getFieldWithDefault(msg, 13, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AssetRequestInput}
 */
proto.AssetRequestInput.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AssetRequestInput();
  return proto.AssetRequestInput.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AssetRequestInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AssetRequestInput}
 */
proto.AssetRequestInput.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setFilepath(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setEnv(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIssource(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setCandefer(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSideeffects(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setCode(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setPipeline(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsurl(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.setQuery(value);
        break;
      case 12:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIssinglechangerebuild(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.setOptionsid(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AssetRequestInput.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.AssetRequestInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AssetRequestInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AssetRequestInput.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getEnv();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getIssource();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getCandefer();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getSideeffects();
  if (f) {
    writer.writeBool(6, f);
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getPipeline();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getIsurl();
  if (f) {
    writer.writeBool(10, f);
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(11, f);
  }
  f = message.getIssinglechangerebuild();
  if (f) {
    writer.writeBool(12, f);
  }
  f = message.getOptionsid();
  if (f.length > 0) {
    writer.writeString(13, f);
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.AssetRequestInput.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string filePath = 2;
 * @return {string}
 */
proto.AssetRequestInput.prototype.getFilepath = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setFilepath = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string env = 3;
 * @return {string}
 */
proto.AssetRequestInput.prototype.getEnv = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setEnv = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional bool isSource = 4;
 * @return {boolean}
 */
proto.AssetRequestInput.prototype.getIssource = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setIssource = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional bool canDefer = 5;
 * @return {boolean}
 */
proto.AssetRequestInput.prototype.getCandefer = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setCandefer = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional bool sideEffects = 6;
 * @return {boolean}
 */
proto.AssetRequestInput.prototype.getSideeffects = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 6, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setSideeffects = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};

/**
 * optional string code = 7;
 * @return {string}
 */
proto.AssetRequestInput.prototype.getCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setCode = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string pipeline = 8;
 * @return {string}
 */
proto.AssetRequestInput.prototype.getPipeline = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setPipeline = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional bool isURL = 10;
 * @return {boolean}
 */
proto.AssetRequestInput.prototype.getIsurl = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 10, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setIsurl = function (value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};

/**
 * optional string query = 11;
 * @return {string}
 */
proto.AssetRequestInput.prototype.getQuery = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''));
};

/**
 * @param {string} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setQuery = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};

/**
 * optional bool isSingleChangeRebuild = 12;
 * @return {boolean}
 */
proto.AssetRequestInput.prototype.getIssinglechangerebuild = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 12, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setIssinglechangerebuild = function (value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};

/**
 * optional string optionsId = 13;
 * @return {string}
 */
proto.AssetRequestInput.prototype.getOptionsid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''));
};

/**
 * @param {string} value
 * @return {!proto.AssetRequestInput} returns this
 */
proto.AssetRequestInput.prototype.setOptionsid = function (value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.AssetRequestNode.prototype.toObject = function (opt_includeInstance) {
    return proto.AssetRequestNode.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.AssetRequestNode} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.AssetRequestNode.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        input:
          (f = msg.getInput()) &&
          proto.AssetRequestInput.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AssetRequestNode}
 */
proto.AssetRequestNode.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AssetRequestNode();
  return proto.AssetRequestNode.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AssetRequestNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AssetRequestNode}
 */
proto.AssetRequestNode.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = new proto.AssetRequestInput();
        reader.readMessage(
          value,
          proto.AssetRequestInput.deserializeBinaryFromReader,
        );
        msg.setInput(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AssetRequestNode.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.AssetRequestNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AssetRequestNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AssetRequestNode.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(2, f, proto.AssetRequestInput.serializeBinaryToWriter);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.AssetRequestNode.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.AssetRequestNode} returns this
 */
proto.AssetRequestNode.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional AssetRequestInput input = 2;
 * @return {?proto.AssetRequestInput}
 */
proto.AssetRequestNode.prototype.getInput = function () {
  return /** @type{?proto.AssetRequestInput} */ (
    jspb.Message.getWrapperField(this, proto.AssetRequestInput, 2)
  );
};

/**
 * @param {?proto.AssetRequestInput|undefined} value
 * @return {!proto.AssetRequestNode} returns this
 */
proto.AssetRequestNode.prototype.setInput = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.AssetRequestNode} returns this
 */
proto.AssetRequestNode.prototype.clearInput = function () {
  return this.setInput(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AssetRequestNode.prototype.hasInput = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * @enum {number}
 */
proto.SpecifierType = {
  SPECIFIER_TYPE_COMMONJS: 0,
  SPECIFIER_TYPE_ESM: 1,
  SPECIFIER_TYPE_URL: 2,
  SPECIFIER_TYPE_CUSTOM: 3,
};

/**
 * @enum {number}
 */
proto.DependencyPriority = {
  DEPENDENCY_PRIORITY_SYNC: 0,
  DEPENDENCY_PRIORITY_PARALLEL: 1,
  DEPENDENCY_PRIORITY_LAZY: 2,
  DEPENDENCY_PRIORITY_CONDITIONAL: 3,
};

/**
 * @enum {number}
 */
proto.BundleBehavior = {
  BUNDLE_BEHAVIOR_INLINE: 0,
  BUNDLE_BEHAVIOR_ISOLATED: 1,
};

/**
 * @enum {number}
 */
proto.SourceType = {
  SOURCE_TYPE_SCRIPT: 0,
  SOURCE_TYPE_MODULE: 1,
};

/**
 * @enum {number}
 */
proto.OutputFormat = {
  OUTPUT_FORMAT_ESMODULE: 0,
  OUTPUT_FORMAT_COMMONJS: 1,
  OUTPUT_FORMAT_GLOBAL: 2,
};

/**
 * @enum {number}
 */
proto.EnvironmentContext = {
  ENVIRONMENT_CONTEXT_BROWSER: 0,
  ENVIRONMENT_CONTEXT_WEB_WORKER: 1,
  ENVIRONMENT_CONTEXT_SERVICE_WORKER: 2,
  ENVIRONMENT_CONTEXT_WORKLET: 3,
  ENVIRONMENT_CONTEXT_NODE: 4,
  ENVIRONMENT_CONTEXT_ELECTRON_MAIN: 5,
  ENVIRONMENT_CONTEXT_ELECTRON_RENDERER: 6,
};

/**
 * @enum {number}
 */
proto.EnvironmentFeature = {
  ENVIRONMENT_FEATURE_ESMODULES: 0,
  ENVIRONMENT_FEATURE_DYNAMIC_IMPORT: 1,
  ENVIRONMENT_FEATURE_WORKER_MODULE: 2,
  ENVIRONMENT_FEATURE_SERVICE_WORKER_MODULE: 3,
  ENVIRONMENT_FEATURE_IMPORT_META_URL: 4,
  ENVIRONMENT_FEATURE_ARROW_FUNCTIONS: 5,
  ENVIRONMENT_FEATURE_GLOBAL_THIS: 6,
};

goog.object.extend(exports, proto);
