/* in.jsx generated by @compiled/babel-plugin v0.38.1 */
import { forwardRef } from 'react';
import * as React from 'react';
import { ax, ix, CC, CS } from "@compiled/react/runtime";
const _6 = "._1tke1mlo{min-height:var(--_rmnwww)}";
const _5 = "._4cvr1h6o{align-items:center}";
const _4 = "._1bah1h6o{justify-content:center}";
const _3 = "._1e0c1txw{display:flex}";
const _2 = "._18m915vq{overflow-y:hidden}";
const _ = "._1reo15vq{overflow-x:hidden}";
const gridSize = 8;
const Container = forwardRef(({ as: C = "div", style: __cmpls, ...__cmplp }, __cmplr) => {
  if (__cmplp.innerRef) {
    throw new Error("Please use 'ref' instead of 'innerRef'.");
  }
  const { hideDropdownLabel, ...__cmpldp } = __cmplp;
  return <CC>
        <CS>{[_, _2, _3, _4, _5, _6]}</CS>
        <C {...__cmpldp} style={{
      ...__cmpls,
      "--_rmnwww": ix(gridSize * (__cmplp.hideDropdownLabel ? 14 : 17), "px")
    }} ref={__cmplr} className={ax(["_1reo15vq _18m915vq _1e0c1txw _1bah1h6o _4cvr1h6o _1tke1mlo", __cmplp.className])} />
      </CC>;
});
if (process.env.NODE_ENV !== 'production') {
  Container.displayName = 'Container';
}
export const Component = ({ hideDropdownLabel }) => <Container hideDropdownLabel={hideDropdownLabel} />;
