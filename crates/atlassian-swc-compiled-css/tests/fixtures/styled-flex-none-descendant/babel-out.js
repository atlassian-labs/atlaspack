/* in.jsx generated by @compiled/babel-plugin v0.38.1 */
import { forwardRef } from 'react';
import * as React from 'react';
import { ax, ix, CC, CS } from "@compiled/react/runtime";
const _4 = "._vdz4kb7n:hover [data-target=child]{opacity:1}";
const _3 = "._i0dl1wug{flex-basis:auto}";
const _2 = "._1o9zidpf{flex-shrink:0}";
const _ = "._16jlidpf{flex-grow:0}";
const Item = forwardRef(({
  as: C = "div",
  style: __cmpls,
  ...__cmplp
}, __cmplr) => {
  if (__cmplp.innerRef) {
    throw new Error("Please use 'ref' instead of 'innerRef'.");
  }
  return <CC>
        <CS>{[_, _2, _3, _4]}</CS>
        <C {...__cmplp} style={__cmpls} ref={__cmplr} className={ax(["_16jlidpf _1o9zidpf _i0dl1wug _vdz4kb7n", __cmplp.className])} />
      </CC>;
});
if (process.env.NODE_ENV !== 'production') {
  Item.displayName = 'Item';
}
export const Component = () => <Item><span data-target="child">Child</span></Item>;
